---
import PlannerLayout from "../layouts/PlannerLayout.astro";
import MainLayout from "../layouts/MainLayout.astro";
import ExerciseCard from "../components/Exercise-card.astro";
import ExerciseModal from "../components/ExerciseModal.astro";



---

<MainLayout>
    <PlannerLayout>
        <div class = "content-box">
            <button id = "add-bnt">Add new</button>
            <div class="exercises-grid">
                
            </div>
        </div>
        
        <dialog id = "modal">
            <ExerciseModal></ExerciseModal>
        </dialog>
    </PlannerLayout>
</MainLayout>

<script>
import { string } from "astro:schema";

const exercises = [];
for(let i; i < localStorage.length; i++){
    const key = localStorage.key(i);
    
    if(key.search("exercises")){
        const data = JSON.parse(localStorage.getItem(key))
        exercises.push(
            {
                id: key,
                title: data.title,
                image: data.image,
                sets: data.sets,
                minReps: data.minReps,
                maxReps: data.maxReps,
                weight: data.weight,
                description: data.description,
            }
        )
    }
}
const exercisesGrid = document.querySelector(".exercises-grid")
exercisesGrid.innerHTML = exercises.map(item => 
    `<ExerciseCard
    title = {item.title}
    image = {item.image}
    sets = {item.sets}
    minReps = {item.minReps}
    maxReps = {item.maxReps}
    weight = {item.weight}
    description = {item.description}
    id = {item.id}
    ></ExerciseCard>`
).join('');

document.addEventListener('DOMContentLoaded', () => {
    const modal = document.querySelector('dialog')
    const editButtons = document.querySelectorAll('[data-edit-btn-id]')
    const addButton = document.querySelector('#add-bnt')
    const loadModal = (e) => {
        modal?.showModal();
        if(e.target.id == "add-bnt"){
            const saveBtn = modal.querySelector('#save-btn')
            
            saveBtn.setAttribute('data-exercise-id', generateNewId())
            console.log(saveBtn)
        }
        
    }
    editButtons.forEach(editButton => {
        editButton.addEventListener('click', loadModal)
    })
    addButton.addEventListener('click', loadModal)

    

});

function generateNewId() {
    const currentTime = Date.now();
    const randomNumber = Math.floor(Math.random() * 1e6)
    
    return `${currentTime}-${randomNumber}`;
}
    
</script>

<style>
    .exercises-grid{
        padding: 0px var(--padding-sm);
        

        display: grid;
        grid-template-columns: repeat(1, 1fr);
        gap: 3vh;

        overflow: auto;
        max-height: 80vh;

        border: solid 2px var(--dark-gray);

        background-color: var(--white);
    }
    #modal{
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        
        padding: 0%;
        border: none;
    }
    .content-box{
        margin: 0 5vw;
    }

    #add-bnt{
        margin-bottom: 1vh;
    }

    button{
        background-color: var(--yellow);
        color: var(--white);
        border: none;
        padding: var(--padding-sm) var(--padding-md);

        grid-row: 1 / span 2;
        grid-column: 2;

        transition: transform 0.1s;
    }
    button:hover{
        filter: brightness(0.8);
    }
    button:active{
    transform: scale(1.05);
    }

    @media (min-width: 500px){
        .exercises-grid{
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @media (min-width: 900px){
        .exercises-grid{
            grid-template-columns: repeat(3, 1fr);
        }
    }
</style>
