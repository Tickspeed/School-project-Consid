
---
const {exercise} = Astro.props
---


<div class = "exercise-modal">
    
    <input id = "title" class="title" type="text" placeholder="Title">
    <textarea name="description" id="description-text" placeholder="Description">{exercise.description}</textarea>
    
        <strong>Sets: </strong><input id = "sets" class = "number-input" type="number">{exercise.sets}</input>
        <strong>Reps: </strong><div><input id = "min-reps" class = "number-input" type="number">{exercise.minReps}</input> - <input id = "max-reps" class = "number-input" type="number">{exercise.maxReps}</input></div>
        <strong>Muscle Group: </strong><input id = "muscle" type="text">{exercise.muscleGroup}</input></input>
    
    <button class="blue" data-exercise-id id = "save-btn">Save</button>
    <button class="blue" id = "cancel-btn">Cancel</button>
</div>

<script>
// @ts-nocheck
const titleInput = document.querySelector('.title');
const descriptionText = document.querySelector('#description-text');
const setsInput = document.querySelector('#sets');
const minReps = document.querySelector('#min-reps');
const maxReps = document.querySelector('#max-reps');
const muscleInput = document.querySelector('#muscle')



const cancelBtn = document.querySelector('#cancel-btn')
const saveBtn = document.querySelector('#save-btn')
const modal = cancelBtn.closest('dialog')
cancelBtn.addEventListener('click', (e) =>{
    modal.close()
})

saveBtn.addEventListener('click', (e) => {
    
    const entry = {
        title: titleInput.value,
        description : descriptionText.value,
        sets: setsInput.value,
        minReps: minReps.value,
        maxReps: maxReps.value,
        muscles: muscleInput.value,
    }
    const id = saveBtn.dataset.exerciseId
    console.log(id)
    localStorage.setItem(id, JSON.stringify(entry))
})
</script>

<style>
    .exercise-modal{
        height: 100%;
        width: 100%;
        background-color: var(--light-gray);
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        justify-content: center;
        gap: 1vh;
        padding: 2vh;

        border: solid 4px var(--dark-gray);
        
    }

    img{
        grid-column: 1 / 3;
    }
    
    .title{
        grid-column: 1 / 3;
        text-align: center;

        font-size: var(--font-size-lg);
        padding: var(--padding-sm);
    }
    textarea{
        grid-column: 1 / 3;
    }
    .number-input{
        width: 20%;
        height: 3vh;
        align-self: center;
    }
    input, textarea{
        border: solid 2px var(--dark-gray);
        background-color: var(--light-gray);
    }
    button.blue{
        background-color: var(--dark-blue);
        color: var(--white);
        border: none;

        padding: var(--padding-sm) 0;
    }
    button:hover{
        filter: brightness(0.8);
    }
    #image-button{
        grid-column: 1/3;
        justify-self: center;
        width: 30%;
    }
</style>